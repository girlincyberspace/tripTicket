// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: payment.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPayment = `-- name: CreatePayment :one
INSERT INTO payments (
    booking_id, amount, payment_method, payment_status, transaction_ref
) VALUES (
          $1, $2, $3, $4, $5
         ) RETURNING id, booking_id, amount, payment_method, payment_status, transaction_ref, created_at
`

type CreatePaymentParams struct {
	BookingID      int64          `json:"booking_id"`
	Amount         pgtype.Numeric `json:"amount"`
	PaymentMethod  pgtype.Text    `json:"payment_method"`
	PaymentStatus  pgtype.Text    `json:"payment_status"`
	TransactionRef pgtype.Text    `json:"transaction_ref"`
}

func (q *Queries) CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error) {
	row := q.db.QueryRow(ctx, createPayment,
		arg.BookingID,
		arg.Amount,
		arg.PaymentMethod,
		arg.PaymentStatus,
		arg.TransactionRef,
	)
	var i Payment
	err := row.Scan(
		&i.ID,
		&i.BookingID,
		&i.Amount,
		&i.PaymentMethod,
		&i.PaymentStatus,
		&i.TransactionRef,
		&i.CreatedAt,
	)
	return i, err
}
